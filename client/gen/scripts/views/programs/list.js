// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.ProgramListView = (function(_super) {

    __extends(ProgramListView, _super);

    function ProgramListView() {
      return ProgramListView.__super__.constructor.apply(this, arguments);
    }

    ProgramListView.prototype.template = _.template($("#nav_view").html());

    ProgramListView.prototype.initialize = function() {
      _.bindAll(this);
      return this.render();
    };

    ProgramListView.prototype.events = {
      'click': 'programSelected'
    };

    ProgramListView.prototype.render = function() {
      this.setElement(this.template({
        program: this.model.toJSON(),
        selected: this.options.selected,
        isMain: this.options.isMain
      }));
      return this;
    };

    ProgramListView.prototype.programSelected = function() {
      return this.showProgram();
    };

    ProgramListView.prototype.showProgram = function(edit) {
      if (edit == null) {
        edit = false;
      }
      $(this.el).parent().find('li').not('#new_program').removeClass('selected');
      $(this.el).addClass('selected');
      if (App.contentView != null) {
        return App.contentView.updateProgram(this.model, edit);
      }
    };

    ProgramListView.prototype.close = function() {
      this.remove();
      return this.unbind();
    };

    return ProgramListView;

  })(Backbone.View);

}).call(this);
