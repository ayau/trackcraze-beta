// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.ProgramView = (function(_super) {

    __extends(ProgramView, _super);

    function ProgramView() {
      return ProgramView.__super__.constructor.apply(this, arguments);
    }

    ProgramView.prototype.template = _.template($("#program_view").html());

    ProgramView.prototype.initialize = function(opt) {
      _.bindAll(this);
      this.model.bind("change", this.render);
      this.vent = opt.vent;
      this.vent.bind('program_edit', this.edit);
      return this.render();
    };

    ProgramView.prototype.render = function() {
      this.el.innerHTML = this.template(this.model.toJSON());
      this.update();
      return this;
    };

    ProgramView.prototype.update = function() {
      var _this = this;
      return this.model.splits.each(function(split) {
        var split_view;
        split_view = new App.SplitView({
          model: split,
          vent: _this.vent
        });
        return $(_this.el).find('#split_holder').append(split_view.render().el);
      });
    };

    ProgramView.prototype.edit = function() {
      var _ref, _ref1;
      if ((_ref = this.program_name) == null) {
        this.program_name = this.$('.program_name');
      }
      this.program_name.addClass('edit');
      if ((_ref1 = this.input) == null) {
        this.input = this.program_name.find('input');
      }
      this.input.focus();
      return this.$('.new_split').addClass('edit');
    };

    return ProgramView;

  })(Backbone.View);

}).call(this);
