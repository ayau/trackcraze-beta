// Generated by CoffeeScript 1.3.3
(function() {
  var api, app, authenticate, config, everyauth, express, port, routes, sessions;

  config = require('./config');

  express = require('express');

  routes = require('./routes');

  api = require('./api/api');

  everyauth = require('everyauth');

  app = module.exports = express.createServer();

  sessions = {};

  everyauth.facebook.appId(config.facebook.id).appSecret(config.facebook.secret).handleAuthCallbackError(function(req, res) {}).findOrCreateUser(function(session, accessToken, accessTokExtra, fbUserMetadata) {
    var userPromise;
    userPromise = this.Promise();
    api.login(fbUserMetadata, function(err, user) {
      if (err || !(user != null)) {
        return userPromise.fail('error!?');
      }
      userPromise.fulfill(user);
      sessions[user.id] = user;
      return console.log(user);
    });
    return userPromise;
  }).redirectPath('/');

  everyauth.everymodule.findUserById(function(req, userId, callback) {
    return callback(null, sessions[userId]);
  });

  app.configure(function() {
    app.set('views', __dirname + '/views');
    app.set('view engine', 'jade');
    app.set('view options', {
      layout: false
    });
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(express.cookieParser());
    app.use(express["static"](__dirname + '/../../client/gen/'));
    app.use(express.session({
      secret: '3Eg9dD13gDleq'
    }));
    app.use(everyauth.middleware());
    return app.use(app.router);
  });

  app.configure('development', function() {
    return app.use(express.errorHandler({
      dumpExceptions: true,
      showStack: true
    }));
  });

  app.configure('production', function() {
    return app.use(express.errorHandler());
  });

  authenticate = function(req, res, next) {
    if (!(req.user != null)) {
      return res.send(401);
    } else {
      return next();
    }
  };

  app.get('/', routes.index);

  app.get('/programs/:id', routes.programs);

  app.get('/api/dummy/me', api.dummy_me);

  app.get('/api/dummy/programs', api.dummy_programs);

  app.get('/api/me', authenticate, api.get_me);

  app.get('/api/me/programs', api.get_me_programs);

  app.post('/api/me/programs', api.create_me_programs);

  app.put('/api/me/programs/:id', api.edit_program);

  app["delete"]('/api/me/programs/:id', api.delete_program);

  app.get('/api/test/programs', api.get_test_programs);

  port = process.env.PORT || 3000;

  app.listen(port, function() {
    return console.log('Express server listening on port %d in %s mode', app.address().port, app.settings.env);
  });

}).call(this);
